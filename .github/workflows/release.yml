name: Release workflow

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Version bump type: M=major, m=minor, p=patch'
        required: true
        default: 'p'
        type: choice
        options:
          - M
          - m
          - p
      commit_sha:
        description: 'Commit SHA on main'
        required: false
        type: string
  pull_request:
    types: [ closed ]
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Setup
        run: |
          if [ ${{ github.ref }} != "refs/heads/main" ]; then
            echo "Release can be performed only from 'main'"
            exit 1
          fi
          
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            ref="${{ github.event.pull_request.merge_commit_sha }}"
            bump_type="p"
          else 
            ref="${{ github.event.inputs.commit_sha }}"
            bump_type="${{ github.event.inputs.bump_type }}"
          fi

          echo "CHECKOUT_REF=$ref" >> $GITHUB_ENV
          echo "BUMP_TYPE=$bump_type" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          ref: ${{ env.CHECKOUT_REF }}
          fetch-depth: '0'

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: zulu
          cache: gradle

      - name: Get next version
        run: |
          current_version_name=$(grep -E 'versionName\s*=\s*' 'app/build.gradle.kts' | awk -F= '{print $2}' | tr -d '"\n')
          current_version_code=$(grep -E 'versionCode\s*=\s*' 'app/build.gradle.kts' | awk -F= '{print $2}' | tr -d '\n')
          chmod +x ./.github/scripts/increment_version.sh
          next_version_name=$(./.github/scripts/increment_version.sh -${{ env.BUMP_TYPE }} $current_version_name)
          next_version_code=$((current_version_code + 1))
          echo "VERSION_NAME=$next_version_name" >> $GITHUB_ENV
          echo "VERSION_CODE=$next_version_code" >> $GITHUB_ENV
        shell: bash

      - name: Bump application version
        uses: chkfung/android-version-actions@v1.2.1
        with:
          gradlePath: app/build.gradle.kts
          versionCode: ${{ env.VERSION_CODE }}
          versionName: ${{ env.VERSION_NAME }}

      - name: Cache gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Copy Google Services
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
        run: |
          echo "$GOOGLE_SERVICES" > app/google-services.json

      - name: Grant permissions to Gradlew
        run: chmod +x ./gradlew

      - name: Decode keystore
        if: github.event_name == 'workflow_dispatch'
        env:
          SIGNING_KEY_STORE_ENCODED_STRING: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
        run: |
          echo "$SIGNING_KEY_STORE_ENCODED_STRING" > expenny-release-store-base64.txt
          base64 -d expenny-release-store-base64.txt > app/expenny-release-store.jks
          rm -f expenny-release-store-base64.txt

      - name: Build release APK
        if: github.event_name == 'workflow_dispatch'
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: ./gradlew assembleRelease --stacktrace

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload debug build to App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{ secrets.FIREBASE_DEBUG_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          file: app/build/outputs/apk/debug/app-debug.apk
          groups: dev

      - name: Upload release build to App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        if: always() && github.event_name == 'workflow_dispatch'
        with:
          appId: ${{ secrets.FIREBASE_RELEASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          file: app/build/outputs/apk/release/app-release.apk
          groups: qa

      - name: Commit changes
        if: always()
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "Bump version to ${{ env.VERSION_NAME }}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        if: always()
        with:
          github_token: ${{ secrets.PAT }} # Passing PAT to bypass branch protection rules
          branch: ${{ github.ref }}

      - name: Create release tag
        uses: ncipollo/release-action@v1
        if: always() && github.event_name == 'workflow_dispatch'
        with:
          generateReleaseNotes: true
          tag: ${{ env.VERSION_NAME }}
          name: Release ${{ env.VERSION_NAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
